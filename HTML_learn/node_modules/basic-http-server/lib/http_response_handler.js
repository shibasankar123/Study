"use strict";
var logger = require('./logger');

class HttpResponseHandler {
    constructor(response, requestId, stopwatch) {
        this.response = response;
        this.requestId = requestId;
        this.stopwatch = stopwatch;
        this.responseSent = false;
    }

    send(statusCode, data) {
        this._sendResponse(statusCode, data);

        this.stopwatch.stop();
        logger.info({
            req_id: this.requestId,
            res: this.response,
            duration: this.stopwatch.getDuration()
        });
    }

    sendError(statusCode, error, logMessage) {
        this._sendResponse(statusCode);

        this.stopwatch.stop();
        logger.error({req_id: this.requestId, res: this.response, duration: this.stopwatch.getDuration(), err: error}, logMessage);
    }

    _sendResponse(statusCode, data) {
        if (this.responseSent) {
            throw new Error('Response can only be sent once');
        }

        this.response.writeHead(statusCode);
        this.response.end(data);
        this.responseSent = true;
    }
}

module.exports = HttpResponseHandler;